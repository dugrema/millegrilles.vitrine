# HTTPS server
# Serveur https par defaut

# Vitrine
upstream ${IDMG} {
  zone backends 64k;
  server ${HOST} service=${SRV};
}

server {
    # Resolver pour Amazon Service Discovery (SRV)
    resolver 10.0.0.2 valid=30s;

    listen 443 ssl http2; # we enable SPDY here
    listen [::]:443 ssl http2;
    server_name ${WEB_URL};

    # Max 500K upload public default
    client_max_body_size 500K;

    root /usr/share/nginx/html;
    index index.html index.htm;
    try_files $uri /index.html;  # Necessaire pour React

    ssl_certificate /opt/nginx/dist/${IDMG}.cert.pem; # full path to SSL certificate
    ssl_certificate_key /opt/nginx/dist/${IDMG}.key.pem; # full path to SSL key

    # OCSP on
    ssl_stapling on;
    ssl_stapling_verify on;

    # performance enhancement for SSL
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 5m;

    # safety enhancement to SSL: make sure we actually use a safe cipher
    ssl_prefer_server_ciphers on;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:ECDHE-RSA-RC4-SHA:ECDHE-ECDSA-RC4-SHA:RC4-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!3DES:!MD5:!PSK';

    # config to enable HSTS(HTTP Strict Transport Security) https://developer.mozilla.org/en-US/docs/Security/HTTP_Strict_Transport_Security
    # to avoid ssl stripping https://en.wikipedia.org/wiki/SSL_stripping#SSL_stripping
    add_header Strict-Transport-Security "max-age=31536000;";

    location /static {
      # Ressources statiques, elles ont toutes un tag de version
      # Elles peuvent etre cachees indefiniment.
      expires 1y;
      access_log off;
      add_header Cache-Control "public";
    }

    location /data {
      root /usr/share/nginx/millegrilles/${IDMG}/mounts/nginx;
    }

    location /consignation {
      root /usr/share/nginx/millegrilles/${IDMG}/mounts;

      # Re-ecrire la requete pour ajouter le repertoire /local
      rewrite ^/consignation/(.*)$ /consignation/local/$1 break;

      # Ajouter cache des fichiers par le navigateur. Les fichiers consignes
      # sont immuables (ne changent jamais).
      expires 1y;
      add_header Cache-Control "public";
    }

    location /torrents/ {
      root /usr/share/nginx/millegrilles/${IDMG}/mounts/consignation/torrents/torrentfiles;
    }

    # Vitrine API
    location /vitrine_wss/ {
      # set $upstream https://vitrinebackend;
      proxy_pass https://${IDMG};
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $connection_upgrade;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    # Tracker torrent
    location /announce/ {
      # set $upstream https://vitrinebackend;
      proxy_pass https://${IDMG};
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $connection_upgrade;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
    location /scrape/ {
      # set $upstream https://vitrinebackend;
      proxy_pass https://${IDMG};
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $connection_upgrade;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
}
